(* ************************************************************* *)
(*                                                               *)
(*                          model.WEYL                           *)
(*                                                               *)
(* ************************************************************* *)

PropList[WEYL2]=
{
 Prop[in][ F[-1,li1_],F[1,li2_],mom_ ] == 
           PV[ NonCommutative[
           FourMatrix[{ME WeylDelta[li2,li1], 
					WeylMatrix[mom,LI[li2],LI[dot[li1]]]},
                   {WeylMatrix[mom,UI[dot[li2]],UI[li1]], 
		 	        ME WeylDelta[dot[li1],dot[li2]]}] ]
	       I PropagatorDenominator[ mom , ME ] ] ,
 Prop[in][ F[-2,li1_],F[2,li2_],mom_ ] ==
           PV[ NonCommutative[
           FourMatrix[{ 0, WeylMatrix[mom,LI[li2],LI[dot[li1]]]},
                   {WeylMatrix[mom,UI[dot[li2]],UI[li1]], 0 } ] ]
           I PropagatorDenominator[ mom , 0 ] ] ,
 Prop[in][ F[-3,li1_],F[3,li2_],mom_ ] ==
           PV[ NonCommutative[
           FourMatrix[{MU WeylDelta[li2,li1],
                    WeylMatrix[mom,LI[li2],LI[dot[li1]]]},
                   {WeylMatrix[mom,UI[dot[li2]],UI[li1]],
                    MU WeylDelta[dot[li1],dot[li2]]}] ]
           I PropagatorDenominator[ mom , MU ] ] ,
 Prop[in][ F[-4,li1_],F[4,li2_],mom_ ] ==
           PV[ NonCommutative[
           FourMatrix[{MD WeylDelta[li2,li1],
                    WeylMatrix[mom,LI[li2],LI[dot[li1]]]},
                   {WeylMatrix[mom,UI[dot[li2]],UI[li1]],
                    MD WeylDelta[dot[li1],dot[li2]]}] ]
           I PropagatorDenominator[ mom , MD ] ] , 
 Prop[in][ F[-5,li1_],F[5,li2_],mom_ ] ==
           PV[ NonCommutative[
           FourMatrix[{MM WeylDelta[li2,li1],
                    WeylMatrix[mom,LI[li2],LI[dot[li1]]]},
                   {WeylMatrix[mom,UI[dot[li2]],UI[li1]],
                    MM WeylDelta[dot[li1],dot[li2]]}] ]
           I PropagatorDenominator[ mom , MM ] ] ,
 Prop[in][ F[-6,li1_],F[6,li2_],mom_ ] ==
           PV[ NonCommutative[
           FourMatrix[{ 0, WeylMatrix[mom,LI[li2],LI[dot[li1]]]},
                   {WeylMatrix[mom,UI[dot[li2]],UI[li1]], 0 } ] ]
           I PropagatorDenominator[ mom , 0 ] ] ,
 Prop[in][ F[-7,li1_],F[7,li2_],mom_ ] ==
           PV[ NonCommutative[
           FourMatrix[{MC WeylDelta[li2,li1],
                    WeylMatrix[mom,LI[li2],LI[dot[li1]]]},
                   {WeylMatrix[mom,UI[dot[li2]],UI[li1]],
                    MC WeylDelta[dot[li1],dot[li2]]}] ]
           I PropagatorDenominator[ mom , MC ] ] ,
 Prop[in][ F[-8,li1_],F[8,li2_],mom_ ] ==
           PV[ NonCommutative[
           FourMatrix[{MS WeylDelta[li2,li1],
                    WeylMatrix[mom,LI[li2],LI[dot[li1]]]},
                   {WeylMatrix[mom,UI[dot[li2]],UI[li1]],
                    MS WeylDelta[dot[li1],dot[li2]]}] ]
           I PropagatorDenominator[ mom , MS ] ] ,
 Prop[in][ F[-9,li1_],F[9,li2_],mom_ ] ==
           PV[ NonCommutative[
           FourMatrix[{ML WeylDelta[li2,li1],
                    WeylMatrix[mom,LI[li2],LI[dot[li1]]]},
                   {WeylMatrix[mom,UI[dot[li2]],UI[li1]],
                    ML WeylDelta[dot[li1],dot[li2]]}] ]
           I PropagatorDenominator[ mom , ML ] ] ,
 Prop[in][ F[-10,li1_],F[10,li2_],mom_ ] ==
           PV[ NonCommutative[
           FourMatrix[{ 0, WeylMatrix[mom,LI[li2],LI[dot[li1]]]},
                   {WeylMatrix[mom,UI[dot[li2]],UI[li1]], 0 } ] ]
           I PropagatorDenominator[ mom , 0 ] ] ,
 Prop[in][ F[-11,li1_],F[11,li2_],mom_ ] ==
           PV[ NonCommutative[
           FourMatrix[{MT WeylDelta[li2,li1],
                    WeylMatrix[mom,LI[li2],LI[dot[li1]]]},
                   {WeylMatrix[mom,UI[dot[li2]],UI[li1]],
                    MT WeylDelta[dot[li1],dot[li2]]}] ]
           I PropagatorDenominator[ mom , MT ] ] ,
 Prop[in][ F[-12,li1_],F[12,li2_],mom_ ] ==
           PV[ NonCommutative[
           FourMatrix[{MB WeylDelta[li2,li1],
                    WeylMatrix[mom,LI[li2],LI[dot[li1]]]},
                   {WeylMatrix[mom,UI[dot[li2]],UI[li1]],
                    MB WeylDelta[dot[li1],dot[li2]]}] ]
           I PropagatorDenominator[ mom , MB ] ] ,

 Prop[ex][ F[1,li1_],mom_ ] == PV[ NonCommutative[ 
		   LeptonSpinor[mom, ME, li1] ] ],
 Prop[ex][ F[2,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[mom, 0, li1] ] ],
 Prop[ex][ F[3,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[mom, MU, li1] ] ],
 Prop[ex][ F[4,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[mom, MD, li1] ] ],
 Prop[ex][ F[5,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[mom, MM, li1] ] ],
 Prop[ex][ F[6,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[mom, 0, li1] ] ],
 Prop[ex][ F[7,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[mom, MC, li1] ] ],
 Prop[ex][ F[8,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[mom, MS, li1] ] ],
 Prop[ex][ F[9,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[mom, ML, li1] ] ],
 Prop[ex][ F[10,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[mom, 0, li1] ] ],
 Prop[ex][ F[11,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[mom, MT, li1] ] ],
 Prop[ex][ F[12,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[mom, MB, li1] ] ],
 Prop[ex][ F[-1,li1_],mom_ ] == PV[ NonCommutative[ 
           LeptonSpinor[-mom, ME, li1] ] ],
 Prop[ex][ F[-2,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[-mom, 0, li1] ] ],
 Prop[ex][ F[-3,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[-mom, MU, li1] ] ],
 Prop[ex][ F[-4,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[-mom, MD, li1] ] ],
 Prop[ex][ F[-5,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[-mom, MM, li1] ] ],
 Prop[ex][ F[-6,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[-mom, 0, li1] ] ],
 Prop[ex][ F[-7,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[-mom, MC, li1] ] ],
 Prop[ex][ F[-8,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[-mom, MS, li1] ] ],
 Prop[ex][ F[-9,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[-mom, ML, li1] ] ],
 Prop[ex][ F[-10,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[-mom, 0, li1] ] ],
 Prop[ex][ F[-11,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[-mom, MT, li1] ] ],
 Prop[ex][ F[-12,li1_],mom_ ] == PV[ NonCommutative[
           LeptonSpinor[-mom, MB, li1] ] ],

 Prop[in][ V[1,li1_],V[1,li2_],mom_] == 
          PV[  2 I  PropagatorDenominator[ mom , MLA ]
               LowMetric[dot[li1],dot[li2]]
		       LowMetric[-li1,-li2]  ],
 Prop[in][ V[2,li1_],V[2,li2_],mom_] ==
          PV[  2 I  PropagatorDenominator[ mom , MZ ]
               LowMetric[dot[li1],dot[li2]]
               LowMetric[-li1,-li2]  ],
 Prop[in][ V[3,li1_],V[-3,li2_],mom_] ==
          PV[  2 I  PropagatorDenominator[ mom , MW ]
               LowMetric[dot[li1],dot[li2]]
               LowMetric[-li1,-li2]  ],

 Prop[ex][ V[1,li1_],mom_] == 
	   PV[  PolarizationMatrix[ mom, MLA, LI[dot[li1]], LI[-li1]] ]
 Prop[ex][ V[2,li1_],mom_] ==
       PV[  PolarizationMatrix[ mom, MZ, LI[dot[li1]], LI[-li1]] ]
 Prop[ex][ V[3,li1_],mom_] ==
       PV[  PolarizationMatrix[ mom, MW, LI[dot[li1]], LI[-li1]] ]

 Prop[in][ S[1],S[1],mom_ ] ==
       PV[  I PropagatorDenominator[ mom , MH ] ],
 Prop[in][ S[2],S[2],mom_ ] ==
       PV[  I PropagatorDenominator[ mom , MZ ] ],
 Prop[in][ S[3],S[-3],mom_] ==
       PV[  I PropagatorDenominator[ mom , MW ] ],

 Prop[ex][ S[1],mom_ ] == PV[  1 ],
 Prop[ex][ S[2],mom_ ] == PV[  1 ],
 Prop[ex][ S[3],mom_] == PV[  1 ],

 Prop[in][ U[1],U[-1],mom_] == PV[ I PropagatorDenominator[ mom, 0 ] ],
 Prop[in][ U[2],U[-2],mom_] == PV[ I PropagatorDenominator[ mom, MZ ] ],
 Prop[in][ U[3],U[-3],mom_] == PV[ I PropagatorDenominator[ mom, MW ] ],
 Prop[in][ U[4],U[-4],mom_] == PV[ I PropagatorDenominator[ mom, MW ] ],

 Prop[ex][ U[1],mom_ ] == PV[  1 ],
 Prop[ex][ U[2],mom_ ] == PV[  1 ],
 Prop[ex][ U[3],mom_] == PV[  1 ],
 Prop[ex][ U[4],mom_] == PV[  1 ]
}

LineSpec[ F[1] ] = {straight,forward,"e"};
LineSpec[ F[2] ] = { straight, forward, Sub[Greek["n"],"e"] };
LineSpec[ F[3] ] = { straight, forward, "u" };
LineSpec[ F[4] ] = { straight, forward, "d" };
LineSpec[ F[5] ] = { straight, forward, Greek["m"] };
LineSpec[ F[6] ] = { straight, forward, Sub[Greek["n"],Greek["m"]] };
LineSpec[ F[7] ] = { straight, forward, "c" };
LineSpec[ F[8] ] = { straight, forward, "s" };
LineSpec[ F[9] ] = { straight, forward, Greek["t"] };
LineSpec[ F[10] ] = { straight, forward, Sub[Greek["n"],Greek["t"]] };
LineSpec[ F[11] ] = { straight, forward, "t" };
LineSpec[ F[12] ] = { straight, forward, "b" };
LineSpec[ F[-1] ] = {straight,backward,"e"};
LineSpec[ F[-2] ] = { straight, backward, Sub[Greek["n"],"e"] };
LineSpec[ F[-3] ] = { straight, backward, "u" };
LineSpec[ F[-4] ] = { straight, backward, "d" };
LineSpec[ F[-5] ] = { straight, backward, Greek["m"] };
LineSpec[ F[-6] ] = { straight, backward, Sub[Greek["n"],Greek["m"]] };
LineSpec[ F[-7] ] = { straight, backward, "c" };
LineSpec[ F[-8] ] = { straight, backward, "s" };
LineSpec[ F[-9] ] = { straight, backward, Greek["t"] };
LineSpec[ F[-10] ] = { straight, backward, Sub[Greek["n"],Greek["t"]] };
LineSpec[ F[-11] ] = { straight, backward, "t" };
LineSpec[ F[-12] ] = { straight, backward, "b" };
LineSpec[ V[1] ] = {wavy,none,Greek["g"]}
LineSpec[ V[2] ] = { wavy, none, "Z" };
LineSpec[ V[3] ] = { wavy, forward, "W" };
LineSpec[ V[-3] ] = { wavy, backward, "W" };
LineSpec[ S[1] ] = { dashed, none, "H" };
LineSpec[ S[2] ] = { dashed, none, Greek["c"] };
LineSpec[ S[3] ] = { dashed, forward, Greek["j"] };
LineSpec[ S[-3] ] = { dashed, backward, Greek["j"] };
LineSpec[ U[1] ] = { dotted, forward, Sub["u",Greek["g"]] };
LineSpec[ U[2] ] = { dotted, forward, Sub["u","Z"] };
LineSpec[ U[3] ] = { dotted, forward, Sub["u","-"] };
LineSpec[ U[4] ] = { dotted, forward, Sub["u","+"] };
LineSpec[ U[-1] ] = { dotted, backward, Sub["u",Greek["g"]] };
LineSpec[ U[-2] ] = { dotted, backward, Sub["u","Z"] };
LineSpec[ U[-3] ] = { dotted, backward, Sub["u","-"] };
LineSpec[ U[-4] ] = { dotted, backward, Sub["u","+"] };


CoupList[WEYL2]=
{
 Coup[{V[1,li1_],mom1_},{F[-1,li2_],mom2_},{F[1,li3_],mom3_}]  == 
   PV[ NonCommutative[
       FourMatrix[{0, WeylDelta[dot[li3],dot[li1]] WeylDelta[li2,-li1]},
        {UpMetric[dot[li1],dot[li2]] UpMetric[-li1,li3],0}] ] 
       ( I*EL )  ] 
,
 Coup[{V[1,li1_],mom1_},{F[-3,li2_],mom2_},{F[3,li3_],mom3_}]  ==
   PV[ NonCommutative[
       FourMatrix[{0, WeylDelta[dot[li3],dot[li1]] WeylDelta[li2,-li1]},
        {UpMetric[dot[li1],dot[li2]] UpMetric[-li1,li3],0}] ]
       ( -I*EL*(2/3) ) ]
,
 Coup[{V[1,li1_],mom1_},{F[-4,li2_],mom2_},{F[4,li3_],mom3_}]  ==
   PV[ NonCommutative[
       FourMatrix[{0, WeylDelta[dot[li3],dot[li1]] WeylDelta[li2,-li1]},
        {UpMetric[dot[li1],dot[li2]] UpMetric[-li1,li3],0}] ]
       ( -I*EL*(-1/3) ) ]
,
 Coup[{V[2,li1_],mom1_},{F[-1,li2_],mom2_},{F[1,li3_],mom3_}]  ==
   PV[ NonCommutative[
       FourMatrix[{0, WeylDelta[dot[li3],dot[li1]] WeylDelta[li2,-li1]},
        { 0, 0}] ] I*EL/(SW*CW) ]
,
 Coup[{V[2,li1_],mom1_},{F[-2,li2_],mom2_},{F[2,li3_],mom3_}]  ==
   PV[ NonCommutative[
       FourMatrix[{0, WeylDelta[dot[li3],dot[li1]] WeylDelta[li2,-li1]},
        { 0, 0}] ] I*EL/(SW*CW) ]
,

}

(**)

