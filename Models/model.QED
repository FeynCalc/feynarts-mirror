(* ************************************************************* *)
(*                                                               *)
(*                          model.QED                            *)
(*                                                               *)
(* ************************************************************* *)

PropList[QED]=
{
 Prop[in][ F[-1],F[1],mom_ ] == 
           PV[ NonCommutative[ DiracSlash[ mom ] + ME ]  
	       I PropagatorDenominator[ mom , ME ] ],
 Prop[in][ F[-3],F[3],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] + MU ]  
               I PropagatorDenominator[ mom , MU ] ],
 Prop[in][ F[-4],F[4],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] + MD ]  
	       I PropagatorDenominator[ mom , MD ] ],
 Prop[in][ F[-5],F[5],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] + MM ]  
	       I PropagatorDenominator[ mom , MM ] ],
 Prop[in][ F[-7],F[7],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] + MC ] 
	       I PropagatorDenominator[ mom , MC ] ],
 Prop[in][ F[-8],F[8],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] + MS ] 
	       I PropagatorDenominator[ mom , MS ] ],
 Prop[in][ F[-9],F[9],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] + ML ] 
	       I PropagatorDenominator[ mom , ML ] ],
 Prop[in][ F[-11],F[11],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] +MT] 
	       I PropagatorDenominator[ mom , MT ] ],
 Prop[in][ F[-12],F[12],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] +MB] 
	       I PropagatorDenominator[ mom , MB ] ],
 Prop[ex][ F[1],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ mom,ME] ] ],
 Prop[ex][ F[3],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ mom,MU] ] ],
 Prop[ex][ F[4],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ mom,MD] ] ],
 Prop[ex][ F[5],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ mom,MM] ] ],
 Prop[ex][ F[7],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ mom,MC] ] ],
 Prop[ex][ F[8],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ mom,MS] ] ],
 Prop[ex][ F[9],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ mom,ML] ] ],
 Prop[ex][ F[11],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ mom,MT] ] ],
 Prop[ex][ F[12],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ mom,MB] ] ],
 Prop[ex][ F[-1],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ -mom,ME] ] ],
 Prop[ex][ F[-3],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ -mom,MU] ] ],
 Prop[ex][ F[-4],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ -mom,MD] ] ],
 Prop[ex][ F[-5],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ -mom,MM] ] ],
 Prop[ex][ F[-7],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ -mom,MC] ] ],
 Prop[ex][ F[-8],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ -mom,MS] ] ],
 Prop[ex][ F[-9],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ -mom,ML] ] ],
 Prop[ex][ F[-11],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ -mom,MT] ] ],
 Prop[ex][ F[-12],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ -mom,MB] ] ],
 Prop[in][ V[1,li1_],V[1,li2_],mom_] == 
	  PV[    I  PropagatorDenominator[ mom , MLA ]
                   ( - MetricTensor[li1, li2]  
	           + (1-1/GaugeXi[A]) FourVector[ mom, li1 ]
		     FourVector[ mom, li2 ] 
                     PropagatorDenominator[ mom, MLA/Sqrt[GaugeXi[A]] ] ) ],
 Prop[ex][ V[1,li2_],mom_] == 
	   PV[  PolarizationVector[ mom, li2 ] ]
}

                                (** setting line specifications **)

LineSpec[ F[1] ] = { straight, forward, "e" };
LineSpec[ F[3] ] = { straight, forward, "u" };
LineSpec[ F[4] ] = { straight, forward, "d" };
LineSpec[ F[5] ] = { straight, forward, Greek["m"] };
LineSpec[ F[7] ] = { straight, forward, "c" };
LineSpec[ F[8] ] = { straight, forward, "s" };
LineSpec[ F[9] ] = { straight, forward, Greek["t"] };
LineSpec[ F[11] ] = { straight, forward, "t" };
LineSpec[ F[12] ] = { straight, forward, "b" };
LineSpec[ F[-1] ] = { straight, backward, "e" };
LineSpec[ F[-3] ] = { straight, backward, "u" };
LineSpec[ F[-4] ] = { straight, backward, "d" };
LineSpec[ F[-5] ] = { straight, backward, Greek["m"] };
LineSpec[ F[-7] ] = { straight, backward, "c" };
LineSpec[ F[-8] ] = { straight, backward, "s" };
LineSpec[ F[-9] ] = { straight, backward, Greek["l"] };
LineSpec[ F[-11] ] = { straight, backward, "t" };
LineSpec[ F[-12] ] = { straight, backward, "b" };
LineSpec[ V[1] ] = { wavy, none, Greek["g"] }

CoupList[QED]=
{
 Coup[{V[1,li1_],mom1_},{F[-1],mom2_},{F[1],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(-1) ) ] 
,
 Coup[{V[1,li1_],mom1_},{F[-3],mom2_},{F[3],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(2/3) ) ]
,
 Coup[{V[1,li1_],mom1_},{F[-4],mom2_},{F[4],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(-1/3) ) ]
,
 Coup[{V[1,li1_],mom1_},{F[-5],mom2_},{F[5],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(-1) ) ]
,
 Coup[{V[1,li1_],mom1_},{F[-7],mom2_},{F[7],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(2/3) ) ]
,     
 Coup[{V[1,li1_],mom1_},{F[-8],mom2_},{F[8],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(-1/3) ) ]
, 
 Coup[{V[1,li1_],mom1_},{F[-9],mom2_},{F[9],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(-1) ) ]
,
 Coup[{V[1,li1_],mom1_},{F[-11],mom2_},{F[11],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(2/3) ) ]
,
 Coup[{V[1,li1_],mom1_},{F[-12],mom2_},{F[12],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(-1/3) ) ]
}

(**)

