(* ************************************************************* *)
(*                                                               *)
(*                          model.SM                             *)
(*                                                               *)
(* complete definition of the electroweak standard model in the  *)
(* t'Hooft-Feynman-(renormalizable) or unitary gauge.            *)
(* the conventions are from:                                     *)
(*   M.Boehm, W.Hollik, H.Spiesberger: Fortschr.Phys.34(1986)11  *)
(* ************************************************************* *)

PropList[SM]=
{
 Prop[in][ F[-1],F[1],mom_ ] == 
           PV[ NonCommutative[ DiracSlash[ mom ] + ME ]  
	       I PropagatorDenominator[ mom , ME ] ],
 Prop[in][ F[-2],F[2],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ]      ] 
	       I PropagatorDenominator[ mom , 0  ] ],
 Prop[in][ F[-3],F[3],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] + MU ]  
               I PropagatorDenominator[ mom , MU ] ],
 Prop[in][ F[-4],F[4],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] + MD ]  
	       I PropagatorDenominator[ mom , MD ] ],
 Prop[in][ F[-5],F[5],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] + MM ]  
	       I PropagatorDenominator[ mom , MM ] ],
 Prop[in][ F[-6],F[6],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ]      ]  
	       I PropagatorDenominator[ mom , 0  ] ],
 Prop[in][ F[-7],F[7],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] + MC ] 
	       I PropagatorDenominator[ mom , MC ] ],
 Prop[in][ F[-8],F[8],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] + MS ] 
	       I PropagatorDenominator[ mom , MS ] ],
 Prop[in][ F[-9],F[9],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] + ML ] 
	       I PropagatorDenominator[ mom , ML ] ],
 Prop[in][ F[-10],F[10],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ]    ] 
	       I PropagatorDenominator[ mom , 0  ] ],
 Prop[in][ F[-11],F[11],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] +MT] 
	       I PropagatorDenominator[ mom , MT ] ],
 Prop[in][ F[-12],F[12],mom_ ] == 
	   PV[ NonCommutative[ DiracSlash[ mom ] +MB] 
	       I PropagatorDenominator[ mom , MB ] ],
 Prop[ex][ F[1],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ mom,ME] ] ],
 Prop[ex][ F[2],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ mom,0 ] ] ],
 Prop[ex][ F[3],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ mom,MU] ] ],
 Prop[ex][ F[4],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ mom,MD] ] ],
 Prop[ex][ F[5],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ mom,MM] ] ],
 Prop[ex][ F[6],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ mom,0 ] ] ],
 Prop[ex][ F[7],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ mom,MC] ] ],
 Prop[ex][ F[8],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ mom,MS] ] ],
 Prop[ex][ F[9],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ mom,ML] ] ],
 Prop[ex][ F[10],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ mom,0 ] ] ],
 Prop[ex][ F[11],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ mom,MT] ] ],
 Prop[ex][ F[12],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ mom,MB] ] ],
 Prop[ex][ F[-1],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ -mom,ME] ] ],
 Prop[ex][ F[-2],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ -mom,0 ] ] ],
 Prop[ex][ F[-3],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ -mom,MU] ] ],
 Prop[ex][ F[-4],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ -mom,MD] ] ],
 Prop[ex][ F[-5],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ -mom,MM] ] ],
 Prop[ex][ F[-6],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ -mom,0 ] ] ],
 Prop[ex][ F[-7],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ -mom,MC] ] ],
 Prop[ex][ F[-8],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ -mom,MS] ] ],
 Prop[ex][ F[-9],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ -mom,ML] ] ],
 Prop[ex][ F[-10],mom_ ] == PV[ NonCommutative[ LeptonSpinor[ -mom,0 ] ] ],
 Prop[ex][ F[-11],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ -mom,MT] ] ],
 Prop[ex][ F[-12],mom_ ] == PV[ NonCommutative[ QuarkSpinor[ -mom,MB] ] ],
 Prop[in][ V[1,li1_],V[1,li2_],mom_] == 
	  PV[    I  PropagatorDenominator[ mom , MLA ]
                   ( - MetricTensor[li1, li2]  
	           + (1-1/GaugeXi[A]) FourVector[ mom, li1 ]
		     FourVector[ mom, li2 ] 
                     PropagatorDenominator[ mom,MLA/Sqrt[GaugeXi[A]] ] ) ],
 Prop[in][ V[2,li1_],V[2,li2_],mom_] == 
	   PV[   I  PropagatorDenominator[ mom , MZ ]
		   ( - MetricTensor[li1, li2]  
	           + (1-1/GaugeXi[Z]) FourVector[ mom, li1 ]
		     FourVector[ mom, li2 ] 
                     PropagatorDenominator[ mom,MZ/Sqrt[GaugeXi[Z]] ] ) ],
 Prop[in][ V[3,li1_],V[-3,li2_],mom_] == 
	   PV[   I PropagatorDenominator[ mom , MW ] 
                   ( - MetricTensor[li1, li2]  
	           + (1-1/GaugeXi[W]) FourVector[ mom, li1 ]
		     FourVector[ mom, li2 ] 
                     PropagatorDenominator[ mom,MW/Sqrt[GaugeXi[W]] ] ) ],
 Prop[ex][ V[1,li2_],mom_] == 
	   PV[  PolarizationVector[ mom, li2 ] ],
 Prop[ex][ V[2,li2_],mom_] == 
           PV[  PolarizationVector[ mom, li2 ] ],
 Prop[ex][ V[3,li2_],mom_] == 
	   PV[  PolarizationVector[ mom, li2 ] ],
 Prop[in][ S[1],S[1],mom_ ] == 
	   PV[  I PropagatorDenominator[ mom , MH ] ],
 Prop[in][ S[2],S[2],mom_ ] == 
	   PV[  I PropagatorDenominator[ mom , MZ/Sqrt[GaugeXi[Z]] ] ],
 Prop[in][ S[3],S[-3],mom_] == 
	   PV[  I PropagatorDenominator[ mom , MW/Sqrt[GaugeXi[W]] ] ],
 Prop[ex][ S[1],mom_ ] == PV[  1 ],
 Prop[ex][ S[2],mom_ ] == PV[  1 ],
 Prop[ex][ S[3],mom_] == PV[  1 ],
 Prop[in][ U[1],U[-1],mom_] == PV[ I PropagatorDenominator[ mom, 0 ] ],
 Prop[in][ U[2],U[-2],mom_] == PV[ I PropagatorDenominator[ mom,
                                             MZ/Sqrt[GaugeXi[Z]] ] ],
 Prop[in][ U[3],U[-3],mom_] == PV[ I PropagatorDenominator[ mom, 
                                             MW/Sqrt[GaugeXi[W]] ] ],
 Prop[in][ U[4],U[-4],mom_] == PV[ I PropagatorDenominator[ mom, 
                                             MW/Sqrt[GaugeXi[W]] ] ],
 Prop[ex][ U[1],mom_ ] == PV[  1 ], 
 Prop[ex][ U[2],mom_ ] == PV[  1 ],
 Prop[ex][ U[3],mom_] == PV[  1 ],
 Prop[ex][ U[4],mom_] == PV[  1 ]
}

                                (** setting line specifications **)

LineSpec[ F[1] ] = { straight, forward, "e" };
LineSpec[ F[2] ] = { straight, forward, Sub[Greek["n"],"e"] };
LineSpec[ F[3] ] = { straight, forward, "u" };
LineSpec[ F[4] ] = { straight, forward, "d" };
LineSpec[ F[5] ] = { straight, forward, Greek["m"] };
LineSpec[ F[6] ] = { straight, forward, Sub[Greek["n"],Greek["m"]] };
LineSpec[ F[7] ] = { straight, forward, "c" };
LineSpec[ F[8] ] = { straight, forward, "s" };
LineSpec[ F[9] ] = { straight, forward, Greek["t"] };
LineSpec[ F[10] ] = { straight, forward, Sub[Greek["n"],Greek["t"]] };
LineSpec[ F[11] ] = { straight, forward, "t" };
LineSpec[ F[12] ] = { straight, forward, "b" };
LineSpec[ F[-1] ] = { straight, backward, "e" };
LineSpec[ F[-2] ] = { straight, backward, Sub[Greek["n"],"e"] };
LineSpec[ F[-3] ] = { straight, backward, "u" };
LineSpec[ F[-4] ] = { straight, backward, "d" };
LineSpec[ F[-5] ] = { straight, backward, Greek["m"] };
LineSpec[ F[-6] ] = { straight, backward, Sub[Greek["n"],Greek["m"]] };
LineSpec[ F[-7] ] = { straight, backward, "c" };
LineSpec[ F[-8] ] = { straight, backward, "s" };
LineSpec[ F[-9] ] = { straight, backward, Greek["t"] };
LineSpec[ F[-10] ] = { straight, backward, Sub[Greek["n"],Greek["t"]] };
LineSpec[ F[-11] ] = { straight, backward, "t" };
LineSpec[ F[-12] ] = { straight, backward, "b" };
LineSpec[ V[1] ] = { wavy, none, Greek["g"] };
LineSpec[ V[2] ] = { wavy, none, "Z" };
LineSpec[ V[3] ] = { wavy, forward, "W" };
LineSpec[ V[-3] ] = { wavy, backward, "W" };
LineSpec[ S[1] ] = { dashed, none, "H" };
LineSpec[ S[2] ] = { dashed, none, Greek["c"] };
LineSpec[ S[3] ] = { dashed, forward, Greek["j"] };
LineSpec[ S[-3] ] = { dashed, backward, Greek["j"] };
LineSpec[ U[1] ] = { dotted, forward, Sub["u",Greek["g"]] };
LineSpec[ U[2] ] = { dotted, forward, Sub["u","Z"] };
LineSpec[ U[3] ] = { dotted, forward, Sub["u","-"] };
LineSpec[ U[4] ] = { dotted, forward, Sub["u","+"] };
LineSpec[ U[-1] ] = { dotted, backward, Sub["u",Greek["g"]] };
LineSpec[ U[-2] ] = { dotted, backward, Sub["u","Z"] };
LineSpec[ U[-3] ] = { dotted, backward, Sub["u","-"] };
LineSpec[ U[-4] ] = { dotted, backward, Sub["u","+"] };


CoupList[SM]=
{
 Coup[{V[1,li1_],mom1_},{F[-1],mom2_},{F[1],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(-1) ) ] 
,
 Coup[{V[1,li1_],mom1_},{F[-3],mom2_},{F[3],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(2/3) ) ]
,
 Coup[{V[1,li1_],mom1_},{F[-4],mom2_},{F[4],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(-1/3) ) ]
,
 Coup[{V[2,li1_],mom1_},{F[-1],mom2_},{F[1],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],-1/2*ChiralityProjector[-1]-SW^2*(-1)] 
       I*EL/(SW*CW)  ]
,
 Coup[{V[2,li1_],mom1_},{F[-2],mom2_},{F[2],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],1/2*ChiralityProjector[-1]]  
       I*EL/(SW*CW) ]
,
 Coup[{V[2,li1_],mom1_},{F[-3],mom2_},{F[3],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],1/2*ChiralityProjector[-1]-SW^2*(2/3)]  
       I*EL/(SW*CW) ]
,
 Coup[{V[2,li1_],mom1_},{F[-4],mom2_},{F[4],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],-1/2*ChiralityProjector[-1]-SW^2*(-1/3)]  
       I*EL/(SW*CW) ]
,
 Coup[{V[-3,li1_],mom1_},{F[1],mom2_},{F[-2],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  
       (I*1*EL)/(Sqrt[2]*SW) ] 
, 
 Coup[{V[3,li1_],mom1_},{F[-1],mom2_},{F[2],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[-3,li1_],mom1_},{F[-3],mom2_},{F[4],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  QMM[[1,1]] 
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[3,li1_],mom1_},{F[3],mom2_},{F[-4],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  
                                                     Conjugate[ QMM[[1,1]] ]
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[-3,li1_],mom1_},{F[-3],mom2_},{F[8],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  QMM[[1,2]] 
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[3,li1_],mom1_},{F[3],mom2_},{F[-8],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  
                                                     Conjugate[ QMM[[1,2]] ]
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[-3,li1_],mom1_},{F[-3],mom2_},{F[12],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  QMM[[1,3]] 
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[3,li1_],mom1_},{F[3],mom2_},{F[-12],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  
                                                     Conjugate[ QMM[[1,3]] ]
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[1,li1_],mom1_},{F[-5],mom2_},{F[5],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(-1) ) ]
,
 Coup[{V[1,li1_],mom1_},{F[-7],mom2_},{F[7],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(2/3) ) ]
,     
 Coup[{V[1,li1_],mom1_},{F[-8],mom2_},{F[8],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(-1/3) ) ]
, 
 Coup[{V[2,li1_],mom1_},{F[-5],mom2_},{F[5],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],-1/2*ChiralityProjector[-1]-SW^2*(-1)]  
       I*EL/(SW*CW)  ]
,
 Coup[{V[2,li1_],mom1_},{F[-6],mom2_},{F[6],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],1/2*ChiralityProjector[-1]]  
       I*EL/(SW*CW)  ]
,
 Coup[{V[2,li1_],mom1_},{F[-7],mom2_},{F[7],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],1/2*ChiralityProjector[-1]-SW^2*(2/3)]  
       I*EL/(SW*CW) ]
, 
 Coup[{V[2,li1_],mom1_},{F[-8],mom2_},{F[8],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],-1/2*ChiralityProjector[-1]-SW^2*(-1/3)]  
       I*EL/(SW*CW)  ]
,
 Coup[{V[-3,li1_],mom1_},{F[5],mom2_},{F[-6],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[3,li1_],mom1_},{F[-5],mom2_},{F[6],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[-3,li1_],mom1_},{F[-7],mom2_},{F[4],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  QMM[[2,1]] 
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[3,li1_],mom1_},{F[7],mom2_},{F[-4],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]] 
                                                     Conjugate[ QMM[[2,1]] ]
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[-3,li1_],mom1_},{F[-7],mom2_},{F[8],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  QMM[[2,2]] 
       (I*1*EL)/(Sqrt[2]*SW) ]
,  
 Coup[{V[3,li1_],mom1_},{F[7],mom2_},{F[-8],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]] 
                                                     Conjugate[ QMM[[2,2]] ]
       (I*1*EL)/(Sqrt[2]*SW) ]
,  
 Coup[{V[-3,li1_],mom1_},{F[-7],mom2_},{F[12],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  QMM[[2,3]] 
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[3,li1_],mom1_},{F[7],mom2_},{F[-12],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]] 
                                                     Conjugate[ QMM[[2,3]] ]
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[1,li1_],mom1_},{F[-9],mom2_},{F[9],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(-1) ) ]
,
 Coup[{V[1,li1_],mom1_},{F[-11],mom2_},{F[11],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(2/3) ) ]
,
 Coup[{V[1,li1_],mom1_},{F[-12],mom2_},{F[12],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1]] ( -I*EL*(-1/3) ) ]
,
 Coup[{V[2,li1_],mom1_},{F[-9],mom2_},{F[9],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],-1/2*ChiralityProjector[-1]-SW^2*(-1)]  
       I*EL/(SW*CW)  ]
,  
 Coup[{V[2,li1_],mom1_},{F[-10],mom2_},{F[10],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],1/2*ChiralityProjector[-1]]  
       I*EL/(SW*CW)  ]
,  
 Coup[{V[2,li1_],mom1_},{F[-11],mom2_},{F[11],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],1/2*ChiralityProjector[-1]-SW^2*(2/3)]  
       I*EL/(SW*CW) ]
, 
 Coup[{V[2,li1_],mom1_},{F[-12],mom2_},{F[12],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],-1/2*ChiralityProjector[-1]-SW^2*(-1/3)]  
       I*EL/(SW*CW) ]
, 
 Coup[{V[-3,li1_],mom1_},{F[9],mom2_},{F[-10],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[3,li1_],mom1_},{F[-9],mom2_},{F[10],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[-3,li1_],mom1_},{F[-11],mom2_},{F[4],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  QMM[[3,1]] 
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[3,li1_],mom1_},{F[11],mom2_},{F[-4],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  
                                                     Conjugate[ QMM[[3,1]] ]
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[-3,li1_],mom1_},{F[-11],mom2_},{F[8],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  QMM[[3,2]] 
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[3,li1_],mom1_},{F[11],mom2_},{F[-8],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]] 
                                                     Conjugate[ QMM[[3,2]] ]
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[-3,li1_],mom1_},{F[-11],mom2_},{F[12],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]  QMM[[3,3]] 
       (I*1*EL)/(Sqrt[2]*SW) ]
,
 Coup[{V[3,li1_],mom1_},{F[11],mom2_},{F[-12],mom3_}]  == 
   PV[ NonCommutative[DiracMatrix[li1],ChiralityProjector[-1]]   
                                                     Conjugate[ QMM[[3,3]] ]
       (I*1*EL)/(Sqrt[2]*SW) ]
 ,
 Coup[{V[1,li1_],mom1_},{V[-3,li2_],mom2_},{V[3,li3_],mom3_}]     == 
   PV[ -I*EL*( MetricTensor[li1, li2] * FourVector[(mom2 -mom1 ),li3]
              +MetricTensor[li2, li3] * FourVector[(mom3 -mom2 ),li1]
              +MetricTensor[li3, li1] * FourVector[(mom1 -mom3 ),li2])] 
,
 Coup[{V[2,li1_],mom1_},{V[-3,li2_],mom2_},{V[3,li3_],mom3_}]   == 
   PV[ -I*EL*(-CW/SW)* 
       ( MetricTensor[li1, li2] * FourVector[(mom2 -mom1 ),li3]
        +MetricTensor[li2, li3] * FourVector[(mom3 -mom2 ),li1]
        +MetricTensor[li3, li1] * FourVector[(mom1 -mom3 ),li2] ) ]
,
 Coup[{S[1],mom1_},{S[1],mom2_},{S[1],mom3_}]   == 
   PV[ (-I*3*EL*MH^2)/(2*SW*MW) ]
,
 Coup[{S[1],mom1_},{S[2],mom2_},{S[2],mom3_}]   == 
   PV[ (-I*EL*MH^2)/(2*SW*MW) ]
,
 Coup[{S[1],mom1_},{S[-3],mom2_},{S[3],mom3_}]   == 
   PV[ (-I*EL*MH^2)/(2*SW*MW) ]
,
 Coup[{V[-3,li1_],mom1_},{S[1],mom2_},{S[3],mom3_}]   == 
   PV[ (-I*EL)/(2*SW)*FourVector[(mom3 - mom2 ),li1] ]
,
 Coup[{V[3,li1_],mom1_},{S[1],mom2_},{S[-3],mom3_}]   == 
   PV[ (I*EL)/(2*SW)*FourVector[(mom3 - mom2 ),li1] ]
,
 Coup[{V[-3,li1_],mom1_},{S[2],mom2_},{S[3],mom3_}]   == 
   PV[ EL/(2*SW)*FourVector[(mom3 - mom2 ),li1] ]
,
 Coup[{V[3,li1_],mom1_},{S[2],mom2_},{S[-3],mom3_}]   == 
   PV[ EL/(2*SW)*FourVector[(mom3 - mom2 ),li1] ]
,
 Coup[{V[2,li1_],mom1_},{S[-3],mom2_},{S[3],mom3_}]   == 
   PV[ (-I*EL*(SW^2-CW^2)/(2*SW*CW))*
                              FourVector[mom2 -mom3 ,li1] ]
,
 Coup[{V[1,li1_],mom1_},{S[-3],mom2_},{S[3],mom3_}]   == 
   PV[ (-I*EL)* FourVector[mom2 -mom3 ,li1] ]
,
 Coup[{V[2,li1_],mom1_},{S[1],mom2_},{S[2],mom3_}]   == 
   PV[ (EL/(2*SW*CW))*FourVector[mom3 -mom2 ,li1] ]
,
 Coup[{V[-3,li1_],mom1_},{V[3,li2_],mom2_},{S[1],mom3_}]   == 
   PV[ ((I*EL*MW)/SW)* MetricTensor[li2, li1] ]
,
 Coup[{V[2,li1_],mom1_},{V[2,li2_],mom2_},{S[1],mom3_}]   == 
   PV[ ((I*EL*MW)/(SW*CW^2))* MetricTensor[li2, li1] ]
,
 Coup[{V[2,li1_],mom1_},{V[3,li2_],mom2_},{S[-3],mom3_}]   == 
   PV[ ((-I*EL*MW*SW)/CW)* MetricTensor[li2, li1] ]
,
 Coup[{V[2,li1_],mom1_},{V[-3,li2_],mom2_},{S[3],mom3_}]   == 
   PV[ ((-I*EL*MW*SW)/CW)* MetricTensor[li2, li1] ]
,
 Coup[{V[1,li1_],mom1_},{V[3,li2_],mom2_},{S[-3],mom3_}]   == 
   PV[ (-I*EL*MW)* MetricTensor[li2, li1] ]
,
 Coup[{V[1,li1_],mom1_},{V[-3,li2_],mom2_},{S[3],mom3_}]   == 
   PV[ (-I*EL*MW)* MetricTensor[li2, li1] ]
,
 Coup[{S[1],mom1_},{F[-1],mom2_},{F[1],mom3_}] == 
   PV[ ((-I*EL)/(2*SW*MW))*ME ]
,
 Coup[{S[2],mom1_},{F[-1],mom2_},{F[1],mom3_}] == 
   PV[ NonCommutative[DiracMatrix[5]] ((+EL*1)/(2*SW*MW))*ME ]  
,
 Coup[{S[3],mom1_},{F[-1],mom2_},{F[2],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[-1]*ME] (-I*EL)/(Sqrt[2]*SW*MW) ]   
,                                                        
 Coup[{S[-3],mom1_},{F[1],mom2_},{F[-2],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[1]*ME] (-I*EL)/(Sqrt[2]*SW*MW) ]   
,                                                     
 Coup[{S[1],mom1_},{F[-3],mom2_},{F[3],mom3_}] == 
   PV[ ((-I*EL)/(2*SW*MW))*MU ]
,
 Coup[{S[2],mom1_},{F[-3],mom2_},{F[3],mom3_}] == 
   PV[ NonCommutative[DiracMatrix[5]] ((-EL*1)/(2*SW*MW))*MU ]  
,
 Coup[{S[1],mom1_},{F[-4],mom2_},{F[4],mom3_}] == 
   PV[ ((-I*EL)/(2*SW*MW))*MD ]
,
 Coup[{S[2],mom1_},{F[-4],mom2_},{F[4],mom3_}] == 
   PV[ NonCommutative[DiracMatrix[5]] ((+EL*1)/(2*SW*MW))*MD ]  
,
 Coup[{S[-3],mom1_},{F[-3],mom2_},{F[4],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[-1]*MU-ChiralityProjector[1]*MD]  
         QMM[[1,1]] (I*EL)/(Sqrt[2]*SW*MW) ] 
,                                                        
 Coup[{S[3],mom1_},{F[3],mom2_},{F[-4],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[1]*MU-ChiralityProjector[-1]*MD]  
        Conjugate[ QMM[[1,1]] ] (I*EL)/(Sqrt[2]*SW*MW) ] 
,
 Coup[{S[-3],mom1_},{F[-3],mom2_},{F[8],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[-1]*MU-ChiralityProjector[1]*MS]  
        QMM[[1,2]] (I*EL)/(Sqrt[2]*SW*MW) ] 
,                                                        
 Coup[{S[3],mom1_},{F[3],mom2_},{F[-8],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[1]*MU-ChiralityProjector[-1]*MS]  
       Conjugate[ QMM[[1,2]] ] (I*EL)/(Sqrt[2]*SW*MW) ] 
,
 Coup[{S[-3],mom1_},{F[-3],mom2_},{F[12],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[-1]*MU-ChiralityProjector[1]*MB]  
       QMM[[1,3]] (I*EL)/(Sqrt[2]*SW*MW) ] 
,                                                        
 Coup[{S[3],mom1_},{F[3],mom2_},{F[-12],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[1]*MU-ChiralityProjector[-1]*MB]  
       Conjugate[ QMM[[1,3]] ] (I*EL)/(Sqrt[2]*SW*MW) ] 
,                                                     
 Coup[{S[1],mom1_},{F[-5],mom2_},{F[5],mom3_}] == 
   PV[ ((-I*EL)/(2*SW*MW))*MM ]
,
 Coup[{S[2],mom1_},{F[-5],mom2_},{F[5],mom3_}] == 
   PV[ NonCommutative[DiracMatrix[5]] ((+EL*1)/(2*SW*MW))*MM ]  
,
 Coup[{S[3],mom1_},{F[-5],mom2_},{F[6],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[-1]*MM] (-I*EL)/(Sqrt[2]*SW*MW) ]   
,                                                        
 Coup[{S[-3],mom1_},{F[5],mom2_},{F[-6],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[1]*MM] (-I*EL)/(Sqrt[2]*SW*MW) ]   
,                                                     
 Coup[{S[1],mom1_},{F[-7],mom2_},{F[7],mom3_}] == 
   PV[ ((-I*EL)/(2*SW*MW))*MC ]
,
 Coup[{S[2],mom1_},{F[-7],mom2_},{F[7],mom3_}] == 
   PV[ NonCommutative[DiracMatrix[5]] ((-EL*1)/(2*SW*MW))*MC ]  
,
 Coup[{S[1],mom1_},{F[-8],mom2_},{F[8],mom3_}] == 
   PV[ ((-I*EL)/(2*SW*MW))*MS ]
,
 Coup[{S[2],mom1_},{F[-8],mom2_},{F[8],mom3_}] == 
   PV[ NonCommutative[DiracMatrix[5]] ((+EL*1)/(2*SW*MW))*MS ]  
,
 Coup[{S[-3],mom1_},{F[-7],mom2_},{F[4],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[-1]*MC-ChiralityProjector[1]*MD]  
       QMM[[2,1]] (I*EL)/(Sqrt[2]*SW*MW) ] 
,                                                        
 Coup[{S[3],mom1_},{F[7],mom2_},{F[-4],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[1]*MC-ChiralityProjector[-1]*MD]  
       Conjugate[ QMM[[2,1]] ] (I*EL)/(Sqrt[2]*SW*MW) ] 
,
 Coup[{S[-3],mom1_},{F[-7],mom2_},{F[8],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[-1]*MC-ChiralityProjector[1]*MS]  
       QMM[[2,2]] (I*EL)/(Sqrt[2]*SW*MW) ] 
,                                                        
 Coup[{S[3],mom1_},{F[7],mom2_},{F[-8],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[1]*MC-ChiralityProjector[-1]*MS]  
       Conjugate[ QMM[[2,2]] ] (I*EL)/(Sqrt[2]*SW*MW) ] 
,
 Coup[{S[-3],mom1_},{F[-7],mom2_},{F[12],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[-1]*MC-ChiralityProjector[1]*MB]  
       QMM[[2,3]] (I*EL)/(Sqrt[2]*SW*MW) ] 
,                                                        
 Coup[{S[3],mom1_},{F[7],mom2_},{F[-12],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[1]*MC-ChiralityProjector[-1]*MB]  
       Conjugate[ QMM[[2,3]] ] (I*EL)/(Sqrt[2]*SW*MW) ] 
,                                                     
 Coup[{S[1],mom1_},{F[-9],mom2_},{F[9],mom3_}] == 
   PV[ ((-I*EL)/(2*SW*MW))*ML ]
,
 Coup[{S[2],mom1_},{F[-9],mom2_},{F[9],mom3_}] == 
   PV[ NonCommutative[DiracMatrix[5]] ((+EL*1)/(2*SW*MW))*ML ]  
,
 Coup[{S[3],mom1_},{F[-9],mom2_},{F[10],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[-1]*ML] (-I*EL)/(Sqrt[2]*SW*MW) ]   
,                                                        
 Coup[{S[-3],mom1_},{F[9],mom2_},{F[-10],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[1]*ML] (-I*EL)/(Sqrt[2]*SW*MW) ]   
,                                                     
 Coup[{S[1],mom1_},{F[-11],mom2_},{F[11],mom3_}] == 
   PV[ ((-I*EL)/(2*SW*MW))*MT ]
,
 Coup[{S[2],mom1_},{F[-11],mom2_},{F[11],mom3_}] == 
   PV[ NonCommutative[DiracMatrix[5]] ((-EL*1)/(2*SW*MW))*MT ]  
,
 Coup[{S[1],mom1_},{F[-12],mom2_},{F[12],mom3_}] == 
   PV[ ((-I*EL)/(2*SW*MW))*MB ]
,
 Coup[{S[2],mom1_},{F[-12],mom2_},{F[12],mom3_}] == 
   PV[ NonCommutative[DiracMatrix[5]] ((+EL*1)/(2*SW*MW))*MB ]  
,
 Coup[{S[-3],mom1_},{F[-11],mom2_},{F[4],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[-1]*MT-ChiralityProjector[1]*MD]  
       QMM[[3,1]] (I*EL)/(Sqrt[2]*SW*MW) ] 
,                                                        
 Coup[{S[3],mom1_},{F[11],mom2_},{F[-4],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[1]*MT-ChiralityProjector[-1]*MD]  
       Conjugate[ QMM[[3,1]] ] (I*EL)/(Sqrt[2]*SW*MW) ] 
,
 Coup[{S[-3],mom1_},{F[-11],mom2_},{F[8],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[-1]*MT-ChiralityProjector[1]*MS]  
       QMM[[3,2]] (I*EL)/(Sqrt[2]*SW*MW) ] 
,                                                        
 Coup[{S[3],mom1_},{F[11],mom2_},{F[-8],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[1]*MT-ChiralityProjector[-1]*MS]  
       Conjugate[ QMM[[3,2]] ] (I*EL)/(Sqrt[2]*SW*MW) ] 
,
 Coup[{S[-3],mom1_},{F[-11],mom2_},{F[12],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[-1]*MT-ChiralityProjector[1]*MB]  
       QMM[[3,3]] (I*EL)/(Sqrt[2]*SW*MW) ] 
,                                                        
 Coup[{S[3],mom1_},{F[11],mom2_},{F[-12],mom3_}] == 
   PV[ NonCommutative[ChiralityProjector[1]*MT-ChiralityProjector[-1]*MB]  
       Conjugate[ QMM[[3,3]] ] (I*EL)/(Sqrt[2]*SW*MW) ] 
,                                                     

 Coup[{V[-3,li1_],mom1_},{U[-4],mom2_},{U[2],mom3_}] == 
   PV[ ((I*EL*CW)/SW)*FourVector[mom2 ,li1] ]
,
 Coup[{V[3,li1_],mom1_},{U[-3],mom2_},{U[2],mom3_}] ==  
   PV[ (-I*EL*(CW/SW))*FourVector[mom2 ,li1] ]
,
 Coup[{V[-3,li1_],mom1_},{U[-4],mom2_},{U[1],mom3_}] == 
   PV[ (I*EL*(-1))*FourVector[mom2 ,li1] ]
,
 Coup[{V[3,li1_],mom1_},{U[-3],mom2_},{U[1],mom3_}] == 
   PV[ (-I*EL*(-1))*FourVector[mom2 ,li1] ]
,
 Coup[{V[-3,li1_],mom1_},{U[-2],mom2_},{U[3],mom3_}] == 
   PV[ (I*EL*(-CW/SW))*FourVector[mom2 ,li1] ]
,
 Coup[{V[3,li1_],mom1_},{U[-2],mom2_},{U[4],mom3_}] == 
   PV[ (-I*EL*(-CW/SW))*FourVector[mom2 ,li1] ] 
,
 Coup[{V[-3,li1_],mom1_},{U[-1],mom2_},{U[3],mom3_}]  == 
   PV[ (I*EL)*FourVector[mom2 ,li1] ]
,
 Coup[{V[3,li1_],mom1_},{U[-1],mom2_},{U[4],mom3_}]  == 
   PV[ (-I*EL)*FourVector[mom2 ,li1] ]
,
 Coup[{S[-3],mom1_},{U[-4],mom2_},{U[2],mom3_}] == 
   PV[ (I*EL*MW*(SW^2-CW^2))/(2*CW*SW)/GaugeXi[W] ]
,
 Coup[{S[3],mom1_},{U[-3],mom2_},{U[2],mom3_}] == 
   PV[ (I*EL*MW*(SW^2-CW^2))/(2*CW*SW)/GaugeXi[W] ]
,
 Coup[{S[-3],mom1_},{U[-4],mom2_},{U[1],mom3_}] == 
   PV[ I*EL*MW/GaugeXi[W] ]
,
 Coup[{S[3],mom1_},{U[-3],mom2_},{U[1],mom3_}] == 
   PV[ I*EL*MW/GaugeXi[W] ]
,
 Coup[{S[-3],mom1_},{U[-2],mom2_},{U[3],mom3_}] == 
   PV[ (I*EL*MW)/(2*CW*SW)/GaugeXi[Z] ]
,
 Coup[{S[3],mom1_},{U[-2],mom2_},{U[4],mom3_}] == 
   PV[ (I*EL*MW)/(2*CW*SW)/GaugeXi[Z] ]
,
 Coup[{S[1],mom1_},{U[-4],mom2_},{U[4],mom3_}] == 
   PV[ (-I*EL*MW)/(2*SW)/GaugeXi[W] ]
,
 Coup[{S[1],mom1_},{U[-3],mom2_},{U[3],mom3_}] == 
   PV[ (-I*EL*MW)/(2*SW)/GaugeXi[W] ]
,
 Coup[{S[2],mom1_},{U[-4],mom2_},{U[4],mom3_}] == 
   PV[ (-I*EL*MW*I)/(2*SW)/GaugeXi[W] ]
,
 Coup[{S[2],mom1_},{U[-3],mom2_},{U[3],mom3_}] == 
   PV[ (-I*EL*MW*(-I))/(2*SW)/GaugeXi[W] ]
,
 Coup[{S[1],mom1_},{U[-2],mom2_},{U[2],mom3_}] == 
   PV[ (-I*EL*MW)/(2*CW^2*SW)/GaugeXi[Z] ]
,
 Coup[{V[1,li1_],mom1_},{U[-4],mom2_},{U[4],mom3_}] == 
   PV[ (-I*EL*(-1))*FourVector[mom2 ,li1] ]
,
 Coup[{V[1,li1_],mom1_},{U[-3],mom2_},{U[3],mom3_}] == 
   PV[ (I*EL*(-1))*FourVector[mom2 ,li1] ]
,
 Coup[{V[2,li1_],mom1_},{U[-4],mom2_},{U[4],mom3_}] == 
   PV[ (-I*EL*(CW/SW))*FourVector[mom2 ,li1] ]
,
 Coup[{V[2,li1_],mom1_},{U[-3],mom2_},{U[3],mom3_}] == 
   PV[ (I*EL*(CW/SW))*FourVector[mom2 ,li1] ]
,
         (** 4-vertices **)
 Coup[{ V[-3,li1_],mom1_},{V[-3,li2_],mom2_},
      { V[3,li3_],mom3_},{V[3,li4_],mom4_}]  == 
   PV[ (I*EL^2/SW^2)*
                (2*MetricTensor[li1, li2]*MetricTensor[li3, li4]
		  -MetricTensor[li1, li3]*MetricTensor[li2, li4]
		  -MetricTensor[li1, li4]*MetricTensor[li2, li3] ) ]
,
 Coup[{ V[1,li1_],mom1_},{V[1,li2_],mom2_},
      { V[-3,li3_],mom3_},{V[3,li4_],mom4_}]  == 
   PV[ (-I*EL^2)*
               (2*MetricTensor[li1, li2]*MetricTensor[li4, li3]
                 -MetricTensor[li1, li3]*MetricTensor[li2, li4]
                 -MetricTensor[li1, li4]*MetricTensor[li2, li3] ) ]
,
 Coup[{ V[2,li1_],mom1_},{V[2,li2_],mom2_},
      { V[-3,li3_],mom3_},{V[3,li4_],mom4_}]  == 
   PV[ (-I*EL^2*(CW^2/SW^2))*
               (2*MetricTensor[li1, li2]*MetricTensor[li3, li4]
                 -MetricTensor[li1, li3]*MetricTensor[li2, li4]
                 -MetricTensor[li1, li4]*MetricTensor[li2, li3] ) ]
,
Coup[{ V[1,li1_],mom1_},{V[2,li2_],mom2_},
     { V[-3,li3_],mom3_},{V[3,li4_],mom4_}]  == 
   PV[ (-I*EL^2*(-CW/SW))*
                (2*MetricTensor[li1, li2]*MetricTensor[li3, li4]
                  -MetricTensor[li1, li3]*MetricTensor[li2, li4]
                  -MetricTensor[li1, li4]*MetricTensor[li2, li3]) ]
,
 Coup[{ S[-3],mom1_},{S[-3],mom2_},
      { S[3],mom3_},{S[3],mom4_}]  == 
   PV[ (-I*EL^2*MH^2)/(4*SW^2*MW^2)*2 ]
,
 Coup[{ S[1],mom1_},{S[1],mom2_},
      { S[-3],mom3_},{S[3],mom4_}]  == 
   PV[ (-I*EL^2*MH^2)/(4*SW^2*MW^2)*1 ]
,
 Coup[{ S[2],mom1_},{S[2],mom2_},
      { S[-3],mom3_},{S[3],mom4_}]  == 
   PV[ (-I*EL^2*MH^2)/(4*SW^2*MW^2)*1 ]
,
 Coup[{ S[1],mom1_},{S[1],mom2_},
      { S[2],mom3_},{S[2],mom4_}]  == 
   PV[ (-I*EL^2*MH^2)/(4*SW^2*MW^2)*1 ]
,   
 Coup[{ S[1],mom1_},{S[1],mom2_},
      { S[1],mom3_},{S[1],mom4_}]  == 
   PV[ (-I*EL^2*MH^2)/(4*SW^2*MW^2)*3 ]
,
 Coup[{ S[2],mom1_},{S[2],mom2_},
      { S[2],mom3_},{S[2],mom4_}]  == 
   PV[ (-I*EL^2*MH^2)/(4*SW^2*MW^2)*3 ]
,
 Coup[{ V[-3,li1_],mom1_},{V[3,li2_],mom2_},
      { S[-3],mom3_},{S[3],mom4_}]  == 
  PV[ (I*EL^2)/(2*SW^2)*MetricTensor[li1, li2] ]
,
 Coup[{ V[-3,li1_],mom1_},{V[3,li2_],mom2_},
      { S[1],mom3_},{S[1],mom4_}]  == 
   PV[ (I*EL^2)/(2*SW^2)*MetricTensor[li1, li2] ]
,
 Coup[{ V[-3,li1_],mom1_},{V[3,li2_],mom2_},
      { S[2],mom3_},{S[2],mom4_}]  == 
   PV[ (I*EL^2)/(2*SW^2)*MetricTensor[li1, li2] ]
,
 Coup[{ V[2,li1_],mom1_},{V[2,li2_],mom2_},
      { S[1],mom3_},{S[1],mom4_}]  == 
   PV[ (I*EL^2)/(2*CW^2*SW^2)*MetricTensor[li1, li2] ]
,
 Coup[{ V[2,li1_],mom1_},{V[2,li2_],mom2_},
      { S[2],mom3_},{S[2],mom4_}]  == 
   PV[ (I*EL^2)/(2*CW^2*SW^2)*MetricTensor[li1, li2] ]
,
 Coup[{ V[1,li1_],mom1_},{V[1,li2_],mom2_},
      { S[-3],mom3_},{S[3],mom4_}]  == 
   PV[ (I*EL^2*2)*MetricTensor[li1, li2] ]
,
 Coup[{ V[1,li1_],mom1_},{V[2,li2_],mom2_},
      { S[-3],mom3_},{S[3],mom4_}]  == 
   PV[ (I*EL^2*(SW^2-CW^2)/(CW*SW))*
                                 MetricTensor[li1, li2] ]
,
 Coup[{ V[2,li1_],mom1_},{V[2,li2_],mom2_},
      { S[-3],mom3_},{S[3],mom4_}]  == 
   PV[ (I*EL^2*((CW^2-SW^2))^2/(2*CW^2*SW^2))*
                                 MetricTensor[li1, li2] ]
,
 Coup[{ V[2,li1_],mom1_},{V[-3,li2_],mom2_},
      { S[1],mom3_},{S[3],mom4_}]  == 
   PV[ (-I*EL^2/CW/2)*MetricTensor[li1, li2] ]
,
 Coup[{ V[2,li1_],mom1_},{V[3,li2_],mom2_},
      { S[1],mom3_},{S[-3],mom4_}]  == 
   PV[ (-I*EL^2/CW/2)*MetricTensor[li1, li2] ]
,
 Coup[{ V[1,li1_],mom1_},{V[-3,li2_],mom2_},
      { S[2],mom3_},{S[3],mom4_}]  == 
   PV[ (-I*EL^2*(I/SW/2))*MetricTensor[li1, li2] ]
,
 Coup[{ V[1,li1_],mom1_},{V[3,li2_],mom2_},
      { S[2],mom3_},{S[-3],mom4_}]  == 
   PV[ (-I*EL^2*(-I/SW/2))*MetricTensor[li1, li2] ]
,
 Coup[{ V[1,li1_],mom1_},{V[-3,li2_],mom2_},
      { S[1],mom3_},{S[3],mom4_}]  == 
   PV[ (-I*EL^2/SW/2)*MetricTensor[li1, li2] ]
,
 Coup[{ V[1,li1_],mom1_},{V[3,li2_],mom2_},
      { S[1],mom3_},{S[-3],mom4_}]  == 
   PV[ (-I*EL^2/SW/2)*MetricTensor[li1, li2] ]
,
 Coup[{ V[2,li1_],mom1_},{V[-3,li2_],mom2_},
      { S[2],mom3_},{S[3],mom4_}]  == 
   PV[ (-I*EL^2*(I/CW/2))*MetricTensor[li1, li2] ]
,
 Coup[{ V[2,li1_],mom1_},{V[3,li2_],mom2_},
      { S[2],mom3_},{S[-3],mom4_}]  == 
  PV[ (-I*EL^2*(-I/CW/2))*MetricTensor[li1, li2] ]
}

(**)

