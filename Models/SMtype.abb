
(* :Title: SMtype.abb *)

(* :Author: Hagen Eck *)

(* :Summary: This file  provides a number of abbreviations for restricted 
	     models and for fields. It is read in together with the model
	     SM.mod and defines the possible restrictions on the SM as well
	     as shorthands for SM-type models.

             The model restriction are defined in a
	     such a way that they ressemble FeynArts1.0 options.
	     (e.g. NoLightFHCoupling instead of LightFHCoupling->False)

	     Remember that FieldPoint[ fi1, fi2, ..] removes couplings
	     to any counterterm order, FieldPoint[o][ fi1, ..] turns
	     only couplings of order o off.
*)

(* :Context: HighEnergyPhysics`FeynArts` *)

(* :Package Version 0.1 *)

(* :Mathematica Version 2.0 *)

(* :Requirements: FeynArts 2.0 *)


NoGeneration1=
ExcludeParticles ->
 { F[1,{1}], F[2,{1}], F[3,{1}], F[4,{1}] };

NoGeneration2=
ExcludeParticles ->
 { F[1,{2}], F[2,{2}], F[3,{2}], F[4,{2}] };

NoGeneration3=
ExcludeParticles ->
 { F[1,{3}], F[2,{3}], F[3,{3}], F[4,{3}] };

(* Of course generations can also be switched off by setting
   IndexRange[ GenerationIndex ] !! *)

NoElectronHCoupling=
ExcludeFieldPoints -> 
 {FieldPoint[0][-F[2,{1}], F[2,{1}], S[1]], 
  FieldPoint[0][-F[2,{1}], F[2,{1}], S[2]], 
  FieldPoint[0][-F[2,{1}], F[1,{1}], S[3]]
};

NoLightFHCoupling=
ExcludeFieldPoints -> 
 {FieldPoint[0][-F[2,{1}], F[2,{1}], S[1]], 
  FieldPoint[0][-F[3,{1}], F[3,{1}], S[1]], 
  FieldPoint[0][-F[4,{1}], F[4,{1}], S[1]], 

  FieldPoint[0][-F[2,{2}], F[2,{2}], S[1]], 
  FieldPoint[0][-F[3,{2}], F[3,{2}], S[1]], 
  FieldPoint[0][-F[4,{2}], F[4,{2}], S[1]], 

  FieldPoint[0][-F[2,{3}], F[2,{3}], S[1]], 
(*FieldPoint[0][-F[3,{3}], F[3,{3}], S[1]], (top)*) 
  FieldPoint[0][-F[4,{3}], F[4,{3}], S[1]], 

  FieldPoint[0][-F[2,{1}], F[2,{1}], S[2]], 
  FieldPoint[0][-F[3,{1}], F[3,{1}], S[2]], 
  FieldPoint[0][-F[4,{1}], F[4,{1}], S[2]], 

  FieldPoint[0][-F[2,{2}], F[2,{2}], S[2]], 
  FieldPoint[0][-F[3,{2}], F[3,{2}], S[2]], 
  FieldPoint[0][-F[4,{2}], F[4,{2}], S[2]], 

  FieldPoint[0][-F[2,{3}], F[2,{3}], S[2]], 
(*FieldPoint[0][-F[3,{3}], F[3,{3}], S[2]], (top)*) 
  FieldPoint[0][-F[4,{3}], F[4,{3}], S[2]],

  FieldPoint[0][-F[2,{1}], F[1,{1}], S[3]], 
  FieldPoint[0][-F[2,{2}], F[1,{2}], S[3]], 
  FieldPoint[0][-F[2,{3}], F[1,{3}], S[3]], 

  FieldPoint[0][-F[4,{1}], F[3,{1}], S[3]], 
  FieldPoint[0][-F[4,{1}], F[3,{2}], S[3]], 
(*FieldPoint[0][-F[4,{1}], F[3,{3}], S[3]], (top)*)
  FieldPoint[0][-F[4,{1}], F[3,{1}], S[3]], 
  FieldPoint[0][-F[4,{1}], F[3,{2}], S[3]], 
(*FieldPoint[0][-F[4,{1}], F[3,{3}], S[3]], (top)*) 
  FieldPoint[0][-F[4,{1}], F[3,{1}], S[3]], 
  FieldPoint[0][-F[4,{1}], F[3,{2}], S[3]] 
(*FieldPoint[0][-F[4,{1}], F[3,{3}], S[3]]  (top)*)
};

NoQuarkMixing=
ExcludeFieldPoints -> 
 {FieldPoint[0][-F[4,{2}], F[3,{1}], S[3]], 
  FieldPoint[0][-F[4,{3}], F[3,{1}], S[3] ],
  FieldPoint[0][-F[4,{1}], F[3,{2}], S[3]], 
  FieldPoint[0][-F[4,{3}], F[3,{2}], S[3] ],
  FieldPoint[0][-F[4,{1}], F[3,{3}], S[3]], 
  FieldPoint[0][-F[4,{2}], F[3,{3}], S[3] ],
  FieldPoint[0][-F[4,{2}], F[3,{1}], V[3]], 
  FieldPoint[0][-F[4,{3}], F[3,{1}], V[3] ],
  FieldPoint[0][-F[4,{1}], F[3,{2}], V[3]], 
  FieldPoint[0][-F[4,{3}], F[3,{2}], V[3] ],
  FieldPoint[0][-F[4,{1}], F[3,{3}], V[3]], 
  FieldPoint[0][-F[4,{2}], F[3,{3}], V[3] ] };

(* restricted models:
*)
SMnoQMM = { "SM", NoQuarkMixing };
SM1 = { "SM", NoGeneration2, NoGeneration3 };
SM2 = { "SM", NoGeneration1, NoGeneration3 };
SM3 = { "SM", NoGeneration1, NoGeneration2 };

(* We give now a list of resonable abbreviations for fields. Of course,
   arbitrary symbols can be used here.
*)
ne	= elneutrino	= F[1,{1}];
el 	= electron 	= F[2,{1}];
up	= upquark	= F[3,{1}];
do	= downquark	= F[4,{1}];

nm	= muneutrino	= F[1,{2}];
mu 	= muon 		= F[2,{2}];
ch	= charmquark	= F[3,{2}];
st	= strangequark	= F[4,{2}];

nt	= tauneutrino	= F[1,{3}];
tau 	= tauon 	= F[2,{3}];
top	= topquark	= F[3,{3}];
bo	= bottomquark	= F[4,{3}];

Amu	= photon	= V[1];
Z0	= Zboson	= V[2];
Wp	= Wplus		= V[3];
Wm	= Wminus	=-V[3];

H0	= physHiggs	= S[1];
chi	= unphysHn	= S[2];
phi	= unphysHp	= S[3];
	  unphysHm	=-S[3];

(* think we don't need abb's for ghosts, since they're only Internal *)

